// Next.js API route support: https://nextjs.org/docs/api-routes/introduction
import nodemailer from 'nodemailer';
import { GoogleSpreadsheet } from 'google-spreadsheet';

export default async function handler(req, res) {
    const toEmail = req.body.email;
    const fromEmail = '"Verste Team" <versteteam@gmail.com>';
    const text = `Hello!\n\nThanks for subscribing to Verste! We'll send you updates about Verste and upcoming events. Our website and platform wil be up and running very soon. In the meantime, if you have any questions, feel free to email versteteam@gmail.com!\n\nAll the best,\nVerste Team`;

    // create reusable transporter object using the default SMTP transport
    let transporter = nodemailer.createTransport({
        service: 'Gmail',
        auth: {
            user: process.env.VERSTE_EMAIL,
            pass: process.env.VERSTE_EMAIL_PASS
        }
    });

    // send mail with defined transport object
    let info = await transporter.sendMail({
        from: fromEmail, // sender address
        to: toEmail, // list of receivers
        subject: "Thanks for signing up for Verste!", // Subject line
        text
    });


    const doc = new GoogleSpreadsheet('1jSTzPjWVXXz-6pUILP4IVFMQy5SqNzvg4sEgArsd6dg');
    const sheetType = req.body.sheetType;
    await doc.useServiceAccountAuth({
        // env var values are copied from service account credentials generated by google
        // see "Authentication" section in docs for more info
        client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
        private_key: process.env.GOOGLE_PRIVATE_KEY,
    });


    await doc.loadInfo(); // loads document properties and worksheets

    const index = doc.sheetsByIndex.findIndex(sheet => sheet.title === sheetType);
    console.log(index);

    const sheet = doc.sheetsByIndex[index]; // or use doc.sheetsById[id]
    const date = new Date().toLocaleDateString("en-US");
    await sheet.addRow({ Timestamp: date, Email: toEmail });




    if (info.accepted.length > 0) {
        res.status(200).json({
            accepted: true
        });
    }
    else {
        res.status(200).json({
            accepted: false
        });
    }
}
